@model List<Model.Entity_Type_Attr_Detail>

<link rel="stylesheet" href="~/css/Masters.css" />
<link rel="stylesheet" href="~/lib/jquery/dist/jquery-ui.min.css" asp-append-version="true" />
<script src="~/lib/jquery/dist/jquery.min.js" asp-append-version="true"></script>
<script src="~/lib/jquery/dist/jquery-ui.min.js" asp-append-version="true"></script>
<script src="~/js/attribute.js"></script>

<form id="formid">
    <table border="0" cellspacing="0" cellpadding="0" class="width-100 margin-top-0_1em inputFormDtls">
        <tr style="width:100%;height:31px;">
            <td colspan="2" style="padding-left:5px">
                @if (Context.Session.GetString("SelectedDimensionData") != null && Context.Session.GetString("EntityName") != null)
                {
                    <label style="color:red;font-family:Arial;font-size:12pt;font-weight:bold">@Context.Session.GetString("SelectedDimensionData").ToString()></label>
                    <label style="color:black;font-family:Arial;font-size:10pt;font-weight:bold">@Context.Session.GetString("EntityName").ToString()></label>
                }

            </td>
        </tr>

        <tr class="margin-top-2em" style="padding-top :40px">
            <td>
                <div class="width-100">
                    <span style="height:30px">
                        <hr>
                    </span>
                    @foreach (var menuOption in Model)
                    {
                        if (@menuOption.Isvisible != "N")
                        {
                            <span class="width-49 padding_0_2 fleft">
                                @if (@menuOption.DisplayType.ToLower() != "checkboxlist")
                                {
                                    if (@menuOption.AttrDisplayName.ToUpper() == ("SORT ORDER"))
                                    {
                                        <span class="fleft width-44 whiteText alignright">@menuOption.AttrDisplayName<label id="lblSORT_ORDER_FORMAT" class="sortlimit">(9999999999)</label></span>
                                    }
                                    else
                                    {
                                        <span class="fleft width-44 whiteText alignright">
                                            @menuOption.AttrDisplayName
                                        </span>
                                    }
                                }
                                <span class="pad_left_0_2">
                                    @switch (@menuOption.DisplayType.ToLower())
                                    {
                                        case "textbox":
                                            <input type="text" style="width:45%" maxlength="@menuOption.AttrLength" name="@menuOption.AttrName" id="@menuOption.AttrName" />
                                            break;
                                        case "datepicker":
                                            <input type="text" style="width:45%" name="@menuOption.AttrName" id="@menuOption.AttrName" class="datepicker" />
                                            break;
                                        case "combobox":
                                            <select id="@menuOption.AttrName" name="@menuOption.AttrName" style="width: 45%;">
                                                <option value="">--Select--</option>
                                                @foreach (var item in @menuOption.dropDownDataList)
                                                {
                                                    <option value="@item.VALID_VALUES">@item.VALUE_NAME</option>
                                                }
                                            </select>
                                            break;
                                        case "Parcombo":
                                            @Html.DropDownListFor(m => menuOption.EntityTypeId, new SelectList(menuOption.dropDownDataList, "VALID_VALUES", "VALUE_NAME"), "--Select--", new {@id= menuOption.AttrName, @Name = menuOption.AttrName, style ="width: 45%;", @onchange = "CallChangefunc('" + menuOption.CasDrop + "', this.value)" })
                                            break;
                                        case "cascombo":
                                            @Html.DropDownList(menuOption.AttrName, new SelectList(string.Empty, "Value", "Text"), "--Select--", new {@style = "width:45%;" })
                                            break;
                                        case "userbox":
                                            <input type="text" style="width:45%" maxlength=@menuOption.AttrLength name=@menuOption.AttrName id=@menuOption.AttrName />
                                            break;

                                        default:
                                            break;
                                    }
                                </span>
                            </span>
                        }
                    }
                    <span class="width-49 padding_0_2 fleft">
                        <span class="fleft width-44 whiteText alignright">Effective Date From</span>
                        <span class="pad_right_2" style="margin-left:3px">
                            <input type="text" readonly style="width:19%" name="txtFrom" id="txtFrom" /> To
                            <input type="text" readonly style="width:20%" name="txtTo" id="txtTo" />
                        </span>
                    </span>
                </div>
            </td>
        </tr>
        <tr align="center" style="width:100%;padding-top:10px">
            <td style="width:50%" align="center" colspan="1">
                <button type="submit" class="button" id="btnSearch" style="width: 80px" name="Command" value="Search">
                    <img src="~/Images/Search1.png" />
                </button>
                <div style="color:red" id="lblSearchWarnings"></div>
            </td>
        </tr>
    </table>
    <div ID="tableHeaderDiv">
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
            <tr valign="middle">
                <td height="40" class="whiteTextNormal">
                    @if (Context.Session.GetString("EntityName") != null)
                    {
                        <label class="whiteTextNormal" id="lblcaption">@Context.Session.GetString("EntityName").ToString()</label>
                    }
                    <span class="whiteTextNormal">
                        Total Records: <strong>
                            <label id="lblTotalRecords">0</label>
                        </strong>
                    </span> | <span class="whiteTextNormal">
                        Total Pages :
                        <label class="whiteTextNormal" id="lblCurrentPageDetails">0</label>
                    </span>
                </td>
                <td height="40" class="whiteTextNormal" align ="right">
                    <button type="submit" class="button" id="btnWorkFlow" name="Command" title="WorkFlow" value="WorkFlow"><img class="Image" src="~/Images/WorkFlow.png" style="height: 25px;width: 25px;" /></button>
                    <button type="submit" class="button" id="btnViewAll" name="Command" title="ViewAll" value="ViewAll"><img class="Image" src="~/Images/ViewAll.png" style="height: 25px;width: 25px;" /> </button>
                    <button type="submit" class="button" id="btnImport" name="Command" title="Import" value="Import"><img class="Image" src="~/Images/Import.png" style="height: 25px;width: 25px;" /> </button>
                    <button type="submit" class="button" id="btnExport" name="Command" title="Export" value="Export"><img class="Image" src="~/Images/Export.png" style="height: 25px;width: 25px;" /> </button>
                    <button type="submit" class="button" id="btnAddNew" name="Command" title="AddNew" value="AddNew"><img class="Image" src="~/Images/AddNew.png" style="height: 25px;width: 25px;" /> </button>
                </td>
            </tr>
        </table>
        <div id="divLoading" class="loader">
            <img alt="Loading, please wait" style="position:absolute; top: 30px; left: 45%; width:110px; height:110px" src="~/Images/spinner.gif" />
        </div>
        <input type="hidden" id="cmdName" name="cmdName" value="viewPlaceHolder" />
    </div>
 </form>
    <script>
    $(document).ready(function () {
        applyDatePicker(); // Apply datepicker on document ready
    });

    // Declare the applyDatePicker function
    function applyDatePicker() {
        //$(document).on('focus', '#')
        $(".datepicker").datepicker({
            changeMonth: true, changeYear: true, yearRange: "2000:2050"
        });
    }
    $('#formid').on('submit', submitFormWithAjax);
            function CallChangefunc(val, parcombo) {
                $('#' + val + '').empty();

                $.ajax({
                    type: "POST",
                    url: "Search/GetCasCombo",
                    datatype: "Json",
                    data: { Id: parcombo, cId: val },
                    success: function (data) {
                        $('#' + val + '').append('<option value="">--Select--</option>');
                        $.each(data, function (index, value) {
                            $('#' + val + '').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                        });
                    }
                });
            };

    function submitFormWithAjax(event) {
        event.preventDefault();
        let commandValue = $(document.activeElement).attr("value");
        // Declare an object to store the form data
        let form = {};
        // Loop through form elements and collect the data
        $('#formid input, #formid select').each(function () {
            form[$(this).attr('name')] = $(this).val();
        });
        form['Command'] = commandValue;
        debugger;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetSearchData", "Search")',
            data: form,            
            success: function (data) {
                debugger;
                // Update your DOM based on the received data.
                onSuccess(data);   
                applyDatePicker();
            },
            error: function (err) {
                console.error("Error", err);
            }            
        });
    }       
</script>
